%三边测量的定位算法
%dA,dB,dC为A,B,C到未知节点(假定坐标[x,y]未知)的模拟测量距离
    %A,B,C为三个选定的信标节点,节点坐标已知
BorderLength=12;%正方形区域的边长
BeaconAmount=4;
UNAmount=20;
NodeAmount=UNAmount+BeaconAmount;
 %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~在正方形区域内产生均匀分布的随机拓扑~~~~~~~~~~~~~~~~~~~~ 
 C=(BorderLength-2).*rand(2,3); %带逻辑号的移动节点坐标 
 Sxy=[1:3;C]; 
 UN=[Sxy(2,1:3);Sxy(3,1:3)];
 UN1(3,2)=1;
 Ref_x=[0 10 0 10];
 Ref_y=[0 0 10 10];
 tag_x=[Sxy(2,1) Sxy(2,2) Sxy(2,3)];
 tag_y=[Sxy(3,1) Sxy(3,2) Sxy(3,3)];
     A = [0,0];
    B = [10,0];
    C = [0,10];
    D = [10,10];
 PA1(3,2)=1;
 PB1(3,2)=1;
 PC1(3,2)=1;
 PD1(3,2)=1;
 matrix(4,4,20)=1;  %定义三维数据组 matrix(a,b,:)  Ref_a接收到Ref_b的信号窗口中的随机变量
 matrix1(3,4,20)=1;  %定义三维数据组 matrix(a,b,:)  tag_a接收到Ref_b的信号窗口中的随机变量
 dist(4,4)=1; %定义距离数组
 dist1(3,4)=1; %定义新距离数组
 mean_rssi(4,4)=1;   %每一个窗口的平均值
 mean_rssi1(3,4)=1;   %每一个新窗口的平均值
 r=1;          %迭代次数为5
 Pl_d0=50;    %PLd0为近地参考距离的路径损耗
 Pt=4;     %传输功率
 n=4;
 while(1)
    if(r>3)
        break;
    end
    for i=1:4
        for j=1:4
            if(j~=i)
                dist(i,j)=sqrt((Ref_x(i)-Ref_x(j))^2+(Ref_y(i)-Ref_y(j))^2);
                matrix(i,j,:)=Pt-Pl_d0-10*n*log10(dist(i,j))-random('norm',0,9,1,20);
                mean_rssi(i,j)=mean(matrix(i,j,:));
            else
                dist(i,j)=0;
                matrix(i,j,:)=0;
                mean_rssi(i,j)=0;
            end
        end
    end
    for i=1:4
        for j=1:4
            if(j~=i)
                dist(i,j)=10.^((Pt-Pl_d0-mean_rssi(i,j))./(10*n));
            else
                dist(i,j)=0;
            end
        end
    end
    PD = Triangle(A,B,C,D,dist(1,4),dist(2,4),dist(3,4));
    PA = Triangle(B,C,D,A,dist(2,1),dist(2,3),dist(2,4));
    PB = Triangle(A,C,D,B,dist(1,2),dist(3,2),dist(4,2));
    PC = Triangle(A,B,D,C,dist(1,3),dist(2,3),dist(4,3));
    deltd=[PD(1)-10 PD(2)-10];
    delta=[PA(1)-0 PA(2)-0];
    deltb=[PB(1)-10 PB(2)-0];
    deltc=[PC(1)-0 PC(2)-10];
    for i=1:3
        for j=1:4
            dist1(i,j)=sqrt((tag_x(i)-Ref_x(j))^2+(tag_y(i)-Ref_y(j))^2);
            matrix1(i,j,:)=Pt-Pl_d0-10*n*log10(dist1(i,j))-random('norm',0,9,1,20);
            mean_rssi1(i,j)=mean(matrix1(i,j,:));
            dist1(i,j)=10.^((Pt-Pl_d0-mean_rssi1(i,j))./(10*n));
        end
    end
%     PA2=Triangle2(B,C,D,Sxy(2,1),Sxy(3,1));
    for i=1:3
        PA=Triangle2(B,C,D,Sxy(2,i),Sxy(3,i));
        PA=PA-delta;
        PA1(i,1)=PA(1);
        PA1(i,2)=PA(2);
        PB=Triangle2(A,C,D,Sxy(2,i),Sxy(3,i));
        PB=PB-deltb;
        PB1(i,1)=PB(1);
        PB1(i,2)=PB(2);
        PC=Triangle2(A,B,D,Sxy(2,i),Sxy(3,i));
        PC=PC-deltc;
        PC1(i,1)=PC(1);
        PC1(i,2)=PC(2);
        PD=Triangle2(A,B,C,Sxy(2,i),Sxy(3,i));
        PD=PD-deltd;
        PD1(i,1)=PD(1);
        PD1(i,2)=PD(2);
        UN1(i,1)=(PA1(i,1)/dist1(i,1)+PB1(i,1)/dist1(i,2)+PC1(i,1)/dist1(i,3)+PD1(i,1)/dist1(i,4))/(1/dist1(i,1)+1/dist1(i,2)+1/dist1(i,3)+1/dist1(i,4));
        UN1(i,2)=(PA1(i,2)/dist1(i,1)+PB1(i,2)/dist1(i,2)+PC1(i,2)/dist1(i,3)+PD1(i,2)/dist1(i,4))/(1/dist1(i,1)+1/dist1(i,2)+1/dist1(i,3)+1/dist1(i,4));    
    end
    r=r+1;
 end
 plot(Ref_x,Ref_y,'r*',UN1(1:3,1),UN1(1:3,2),'g*',tag_x,tag_y,'b*'),title('测试结果，红色为参考点，蓝色为目标点，绿色为测试结果'),ylabel('y'),xlabel('x');
 grid on  
 set(gca,'Xtick',[-3:1:13],'Ytick',[-3:1:13]);
%  plot(Sxy(2,1:5),Sxy(3,1:5),'ro');
%  grid on
%  UN1=zeros(2,5);
%  PA1=zeros(2,5);
%  PB1=zeros(2,5);
%  PC1=zeros(2,5);
%  PD1=zeros(2,5);
%  dA1=zeros(1,5);
%  dB1=zeros(1,5);
%  dC1=zeros(1,5);
%  dD1=zeros(1,5);
%  X=zeros(1,5);
%  Y=zeros(1,5);
%  PA_real=zeros(2,5);
%  PB_real=zeros(2,5);
%  PC_real=zeros(2,5);
%  PD_real=zeros(2,5);
%     A = [0,0];
%     B = [10,0];
%     C = [0,10];
%     D = [10,10];
% 
% dist=[10 10 10*sqrt(2);10*sqrt(2) 10 10];
%     dAD=10*sqrt(2);
%     dAB=10;
%     dAC=10;
%     dBC=10*sqrt(2);
%     dBD=10;
%     dCD=10;
%     PD = Triangle(A,B,C,D,dAD,dBD,dCD);
%     PA = Triangle(B,C,D,A,dAB,dAC,dAD);
%     PB = Triangle(A,C,D,B,dAB,dBC,dBD);
%     PC = Triangle(A,B,D,C,dAC,dBC,dCD);
%     PA(1) = real(PA(1));
%     PA(2) = real(PA(2));   
%     PB(1) = real(PB(1));
%     PB(2) = real(PB(2));  
%     PC(1) = real(PC(1));
%     PC(2) = real(PC(2));  
%     PD(1) = real(PD(1));
%     PD(2) = real(PD(2));  
%     deltd=[PD(1)-10 PD(2)-10];
%     delta=[PA(1)-0 PA(2)-0];
%     deltb=[PB(1)-10 PB(2)-0];
%     deltc=[PC(1)-0 PC(2)-10];
% for i=1:1:5
%     PAi=Triangle2(B,C,D,Sxy(2,i),Sxy(3,i));
%     PBi=Triangle2(A,C,D,Sxy(2,i),Sxy(3,i));
%     PCi=Triangle2(A,B,D,Sxy(2,i),Sxy(3,i));
%     PDi=Triangle2(A,B,C,Sxy(2,i),Sxy(3,i));
%     PAi(1)=PAi(1)-delta(1);
%     PAi(2)=PAi(2)-delta(2);
%    PBi(1)=PBi(1)-deltb(1);
%    PBi(2)=PBi(2)-deltb(2);
%    PCi(1)=PCi(1)-deltc(1);
%    PCi(2)=PCi(2)-deltc(2);
%    PDi(1)=PDi(1)-deltd(1);
%    PDi(2)=PDi(2)-deltd(2);
%     PA1(1,i)=real(PAi(1));
%     PA1(2,i)=real(PAi(2));
%     PB1(1,i)=real(PBi(1));
%     PB1(2,i)=real(PBi(2));
%     PC1(1,i)=real(PCi(1));
%     PC1(2,i)=real(PCi(2));
%     PD1(1,i)=real(PDi(1));
%     PD1(2,i)=real(PDi(2));
%     dA1(i)=sqrt((Sxy(2,i)-A(1))^2+(Sxy(3,i)-A(2))^2);
%     dB1(i)=sqrt((Sxy(2,i)-B(1))^2+(Sxy(3,i)-B(2))^2);
%     dC1(i)=sqrt((Sxy(2,i)-C(1))^2+(Sxy(3,i)-C(2))^2);
%     dD1(i)=sqrt((Sxy(2,i)-D(1))^2+(Sxy(3,i)-D(2))^2);
%     UN1(1,i)=(PA1(1,i)/dA1(1,i)+PB1(1,i)/dB1(1,i)+PC1(1,i)/dC1(1,i)+PD1(1,i)/dD1(1,i))/(1/dA1(1,i)+1/dB1(1,i)+1/dC1(1,i)+1/dD1(1,i));
%     UN1(2,i)=(PA1(2,i)/dA1(1,i)+PB1(2,i)/dB1(1,i)+PC1(2,i)/dC1(1,i)+PD1(2,i)/dD1(1,i))/(1/dA1(1,i)+1/dB1(1,i)+1/dC1(1,i)+1/dD1(1,i));
% end
% for i=1:5
% plot(UN1(1,i),UN1(2,i),'g*',Sxy(2,i),Sxy(3,i),'ro'),title('测试结果，红色为参考点，蓝色为目标点，绿色为测试结果'),ylabel('y'),xlabel('x');grid on 
% end

%    plot(xi,yi,'b*');
%     hold on
%     m=[Sxy(2,i) xi];
%     n=[Sxy(3,i) yi];
%     plot(m,n,'b-');

